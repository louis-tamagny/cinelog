<h2 class="relative text-white text-xl font-bold ml-4 mt-12 mb-4 before:absolute before:content before:w-1 before:h-full before:border-2 before:border-yellow-500 before:left-[-15px] before:bottom-[-2px] before:bg-yellow-500 before:rounded-full">Nouveau commentaire</h2>
<form method="post" id="comment-form" class="w-[50%] m-auto">
  {{ form_start(form) }}

  <div class="flex items-center space-x-4">
    <!-- Conteneur des étoiles avec flexbox -->
    <div class="flex space-x-1 mb-2" id="star-rating">
        {% for i in 1..5 %}
            <input type="radio" id="star{{ i }}" name="comment[note]" value="{{ i }}" class="hidden"
                   {% if i == form.vars.value.note %} checked {% endif %} />
            <label for="star{{ i }}" class="cursor-pointer" data-star="{{ i }}" aria-label="{{ i }} étoiles">
                <svg class="w-6 h-6 transition-transform duration-200 ease-in-out transform hover:scale-110"
                     xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"
                     {% if i <= form.vars.value.note %} class="text-yellow-500" {% else %} class="text-gray-300" {% endif %}>
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.286 3.95a1 1 0 00.95.69h4.163c.969 0 1.371 1.24.588 1.81l-3.37 2.447a1 1 0 00-.364 1.118l1.287 3.95c.3.921-.755 1.688-1.54 1.118l-3.37-2.447a1 1 0 00-1.176 0l-3.37 2.447c-.784.57-1.838-.197-1.54-1.118l1.287-3.95a1 1 0 00-.364-1.118L2.172 9.377c-.784-.57-.38-1.81.588-1.81h4.163a1 1 0 00.95-.69l1.286-3.95z"/>
                </svg>
            </label>
        {% endfor %}
    </div>
</div>


  <div class="form-group flex items-center space-x-4">
    <div class="mt-1 flex-1">
        {{ form_widget(form.message, {'attr': {'class': 'w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500' }}) }}
    </div>
  </div>

  <div class="form-group flex justify-end items-center">
    <button type="submit" class="w-30 px-4 py-2 mt-4 text-white bg-yellow-500 rounded-md hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50">
        {{ form.vars.submit_label|default('Envoyer') }}
    </button>
  </div>
  {{ form_end(form) }}
</form>

  <script>
      document.addEventListener('DOMContentLoaded', function () {
          const stars = document.querySelectorAll('#star-rating label');
          const noteText = document.getElementById('note-text');

          stars.forEach(function(star) {
              star.addEventListener('click', function () {
                  const selectedValue = parseInt(star.getAttribute('data-star'));

                  // Mise à jour de la couleur des étoiles
                  stars.forEach(function(s) {
                      const svg = s.querySelector('svg');
                      if (parseInt(s.getAttribute('data-star')) <= selectedValue) {
                          svg.classList.remove('text-gray-300');
                          svg.classList.add('text-yellow-500');
                      } else {
                          svg.classList.remove('text-yellow-500');
                          svg.classList.add('text-gray-300');
                      }
                  });

                  // Mise à jour du texte en fonction de la note
                  noteText.textContent = `${selectedValue} étoiles sélectionnées`;
              });
          });

          // Si une note est déjà sélectionnée (lors du chargement de la page), ajuster les étoiles
          const selectedValue = {{ form.vars.value.note|default(0) }};
          if (selectedValue > 0) {
              stars.forEach(function(star) {
                  const svg = star.querySelector('svg');
                  if (parseInt(star.getAttribute('data-star')) <= selectedValue) {
                      svg.classList.remove('text-gray-300');
                      svg.classList.add('text-yellow-500');
                  } else {
                      svg.classList.remove('text-yellow-500');
                      svg.classList.add('text-gray-300');
                  }
              });
              noteText.textContent = `${selectedValue} étoiles sélectionnées`;
          }
      });
  </script>
